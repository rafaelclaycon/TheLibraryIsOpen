@testable import TheLibraryIsOpen
import XCTest

class UtilsTests: XCTestCase {

    func dateFromString(_ isoDate: String) -> Date {
        let dateFormatter = ISO8601DateFormatter()
        return dateFormatter.date(from: isoDate)!
    }
    
    func testGetSubtituloPodcast_ApenasUmEpisodio() throws {
        var episodes = [Episodio]()
        episodes.append(Episodio(id: "165108622", titulo: "#01 - Emmy Rainha, VMA nadinha!", dataPublicacao: dateFromString("2014-08-28T04:55:17+0000")))
        
        let subtitulo = Utils.getSubtituloPodcast(episodes: episodes)
        
        XCTAssertEqual(subtitulo, "1 episódio · 2014")
    }
    
    func testGetSubtituloPodcast_MaisDeUmEpisodio_TodosNoMesmoAno() throws {
        var episodes = [Episodio]()
        episodes.append(Episodio(id: "907234705", titulo: "#03 - Fofocando sobre Famosos", dataPublicacao: dateFromString("2014-09-11T05:09:01+0000")))
        episodes.append(Episodio(id: "344300838", titulo: "#02 - Vazou foto nua na internet", dataPublicacao: dateFromString("2014-09-04T02:25:46+0000")))
        episodes.append(Episodio(id: "165108622", titulo: "#01 - Emmy Rainha, VMA nadinha!", dataPublicacao: dateFromString("2014-08-28T04:55:17+0000")))
        
        let subtitulo = Utils.getSubtituloPodcast(episodes: episodes)
        
        XCTAssertEqual(subtitulo, "3 episódios · 2014")
    }
    
    func testGetSubtituloPodcast_MaisDeUmEpisodio_AnosDiferentes() throws {
        var episodes = [Episodio]()
        episodes.append(Episodio(id: "907234705", titulo: "O Wanda agora está no Spotify!", dataPublicacao: dateFromString("2020-10-08T17:28:52+0000")))
        episodes.append(Episodio(id: "344300838", titulo: "#158 - As versões forró de música pop", dataPublicacao: dateFromString("2017-09-28T15:14:16+0000")))
        episodes.append(Episodio(id: "165108622", titulo: "#01 - Emmy Rainha, VMA nadinha!", dataPublicacao: dateFromString("2014-08-28T04:55:17+0000")))
        
        let subtitulo = Utils.getSubtituloPodcast(episodes: episodes)
        
        XCTAssertEqual(subtitulo, "3 episódios · 2014-2020")
    }

}
