@testable import TheLibraryIsOpen
import XCTest

class FileSystemOperationsTests: XCTestCase {
    
    private let testFileName = "o-wanda-agora-esta-no-spotify"

    func test_getActualSizeOfFileAtPath_whenFileExists_shouldReturnCorrectSize() throws {
        // Get test file path in test bundle
        let testBundle = Bundle(for: type(of: self))
        let fromPath = testBundle.path(forResource: testFileName, ofType: "mp3")
        XCTAssertNotNil(fromPath)
        
        // Move test file into the app bundle's Documents folder
        let documentsDirURL = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)[0]
        let podcastsDirURL = documentsDirURL.appendingPathComponent("\(InternalDirectoryNames.podcasts)/123/", isDirectory: true)
        try FileManager.default.createDirectory(at: podcastsDirURL, withIntermediateDirectories: true, attributes: nil)
        try FileManager.default.copyItem(atPath: fromPath!, toPath: podcastsDirURL.appendingPathComponent("\(testFileName).mp3").path)
        
        // Run test
        let test = FileSystemOperations.getActualSizeOfFile(atPath: "123/\(testFileName).mp3")
        
        XCTAssertEqual(test, 1_308_040)
    }
    
    func test_getActualSizeOfFileAtPath_whenFileDoesNotExist_shouldReturnNil() throws {
        let test = FileSystemOperations.getActualSizeOfFile(atPath: "456/\(testFileName).mp3")
        XCTAssertNil(test)
    }

}
