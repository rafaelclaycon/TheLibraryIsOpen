@testable import TheLibraryIsOpen
import XCTest

class PodcastTests: XCTestCase {

    var sut: Podcast!
    
    override func setUp() {
        sut = Podcast(id: 0)
        sut.episodios = [Episodio]()
    }
    
    override func tearDown() {
        sut = nil
    }
    
    func testGetTamanhoEpisodios_NenhumEpisodio_DeveRetornarStringEmBranco() throws {
        XCTAssertEqual(sut.getTamanhoEpisodios(), "")
    }

    func testGetTamanhoEpisodios_UmEpisodioPequeno_DeveRetornarValorEmBytes() throws {
        sut.episodios?.append(Episodio(tamanho: 78))
        XCTAssertEqual(sut.getTamanhoEpisodios(), "78 bytes")
    }
    
    func testGetTamanhoEpisodios_UmEpisodioMedio_DeveRetornarValorEmMegabytes() throws {
        sut.episodios?.append(Episodio(tamanho: 1308040))
        XCTAssertEqual(sut.getTamanhoEpisodios(), "1,3 MB")
    }
    
    func testGetTamanhoEpisodios_UmEpisodioGrande_DeveRetornarValorEmGigabytes() throws {
        sut.episodios?.append(Episodio(tamanho: 1308040000))
        XCTAssertEqual(sut.getTamanhoEpisodios(), "1,31 GB")
    }
    
    func testGetTamanhoEpisodios_VariosEpisodiosGrandes_DeveRetornarValorEmGigabytes() throws {
        sut.episodios?.append(Episodio(tamanho: 13080400000))
        sut.episodios?.append(Episodio(tamanho: 13080400000))
        XCTAssertEqual(sut.getTamanhoEpisodios(), "26,16 GB")
    }
    
    func testGetTamanhoEpisodios_VariosEpisodiosMuitoGrandes_DeveRetornarValorEmGigabytes() throws {
        sut.episodios?.append(Episodio(tamanho: 130804000000))
        XCTAssertEqual(sut.getTamanhoEpisodios(), "130,8 GB")
    }
    
    func testGetTamanhoEpisodios_VariosEpisodiosMuitoGrandes_DeveRetornarValorEmTerabytes() throws {
        sut.episodios?.append(Episodio(tamanho: 700804000000))
        sut.episodios?.append(Episodio(tamanho: 200804000000))
        sut.episodios?.append(Episodio(tamanho: 260804000000))
        XCTAssertEqual(sut.getTamanhoEpisodios(), "1,16 TB")
    }

}
